{"version":3,"sources":["dijalog.js"],"names":["css","elem","styles","Object","keys","forEach","key","style","updateClass","classes","operation","trim","length","classList","apply","split","addClass","removeClass","append","content","wrapper","createElement","innerHTML","i","n","childNodes","appendChild","serializeForm","form","isSubmittable","isSubmitter","isCheckable","brackets","newLine","Array","prototype","slice","elements","filter","name","disabled","test","nodeName","type","checked","map","replace","value","isArray","reduce","formValues","push","on","events","callback","event","addEventListener","once","func","removeEventListener","trigger","eventName","data","CustomEvent","bubbles","cancelable","detail","e","document","createEvent","initCustomEvent","dispatchEvent","last","arr","noop","dijalogFactory","spinner","currentDijalog","body","dijalog","dialogs","overlay","animationEndEvent","baseClassNames","close","closing","open","hiding","hidden","visible","defaultOptions","showCloseButton","escapeButtonCloses","overlayClosesOnClick","appendLocation","className","overlayClassName","overlayCSS","contentClassName","contentCSS","closeClassName","closeCSS","beforeClose","afterClose","defaultDialogOptions","afterOpen","message","input","buttons","text","click","dialog","findParentDialog","this","id","onSubmit","contentElement","querySelector","preventDefault","stopPropagation","getFormValueOnSubmit","focusFirstInput","defaultAlertOptions","defaultConfirmOptions","_close","parentNode","removeChild","show","_hideOverlay","get","bind","closeAll","remove","splice","pop","_hide","hide","hideLoading","_showOverlay","options","target","showLoading","withOverlay","assign","_open","closeButton","setTimeout","setupBodyClassName","element","contains","openDialog","buildDialogForm","firstInput","focus","alert","confirm","Error","prompt","label","placeholder","buildDialogButtons","container","button","setAttribute","call","formData","helpers","window","keyCode","undefined","TypeError","to","arguments","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","define","amd","exports","module"],"mappings":"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","file":"dijalog.min.js","sourcesContent":[";(function() {\n\nvar assign = Object.assign ? Object.assign : function(target) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert first argument to object');\n    }\n\n    var to = Object(target);\n\n    for (var i = 1; i < arguments.length; i++) {\n        var nextSource = arguments[i];\n\n        if (nextSource === undefined || nextSource === null) {\n            continue;\n        }\n\n        nextSource = Object(nextSource);\n\n        var keysArray = Object.keys(Object(nextSource));\n\n        for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n            var nextKey = keysArray[nextIndex];\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n            if (desc !== undefined && desc.enumerable) {\n                to[nextKey] = nextSource[nextKey];\n            }\n        }\n    }\n\n    return to;\n};\n\nvar createElement = document.createElement.bind(document);\n\nfunction css(elem, styles) {\n    Object.keys(styles).forEach(function(key) {\n        elem.style[key] = styles[key];\n    });\n}\n\nfunction updateClass(elem, classes, operation) {\n    classes = classes.trim();\n\n    if(classes.length) {\n        elem.classList[operation].apply(\n            elem.classList,\n            classes.split(/\\s+/)\n        );\n    }\n}\n\nfunction addClass(elem, classes) {\n    updateClass(elem, classes, 'add');\n}\n\nfunction removeClass(elem, classes) {\n    updateClass(elem, classes, 'remove');\n}\n\nfunction append(elem, content) {\n    var wrapper;\n\n    if(content.trim) {\n        wrapper = createElement('div');\n        wrapper.innerHTML = content;\n\n        for(var i = 0, n = wrapper.childNodes.length; i < n; i++) {\n            elem.appendChild(wrapper.childNodes[i]);\n        }\n    } else {\n        elem.appendChild(content);\n    }\n}\n\nfunction serializeForm(form) {\n    var isSubmittable = /^(?:input|select|textarea|keygen)/i;\n    var isSubmitter = /^(?:submit|button|image|reset|file)/i;\n    var isCheckable = /^(?:checkbox|radio)/i;\n    var brackets = /\\[\\]/;\n    var newLine = /\\r?\\n/g;\n\n    return Array.prototype.slice.apply(form.elements)\n        .filter(function(elem) {\n            return (\n                elem.name &&\n                !elem.disabled &&\n                isSubmittable.test(elem.nodeName) &&\n                !isSubmitter.test(elem.type) &&\n                (!isCheckable.test(elem.type) || elem.checked)\n            );\n        })\n        .map(function(elem) {\n            return {\n                name: elem.name.replace(brackets, ''),\n                value: elem.value.replace(newLine, '\\r\\n'),\n                isArray: brackets.test(elem.name)\n            };\n        })\n        .reduce(function(formValues, elem) {\n            if(!formValues[elem.name] && elem.isArray) {\n                formValues[elem.name] = [];\n            }\n\n            if(elem.isArray) {\n                formValues[elem.name].push(elem.value);\n            } else {\n                formValues[elem.name] = elem.value;\n            }\n\n            return formValues;\n        }, {});\n}\n\nfunction on(elem, events, callback) {\n    events.split(' ').forEach(function(event) {\n        elem.addEventListener(event, callback);\n    });\n}\n\nfunction once(elem, events, callback) {\n    events = events.split(' ');\n\n    var func = function() {\n        events.forEach(function(event) {\n            elem.removeEventListener(event, func);\n        });\n\n        callback();\n    };\n\n    events.forEach(function(event) {\n        elem.addEventListener(event, func);\n    });\n}\n\nfunction trigger(elem, eventName, data) {\n    var event;\n\n    try {\n        event = new CustomEvent(eventName, {\n            bubbles: true,\n            cancelable: false,\n            detail: data\n        });\n    } catch(e) {\n        event = document.createEvent('CustomEvent');\n        event.initCustomEvent(eventName, true, true, data);\n    }\n\n    elem.dispatchEvent(event);\n}\n\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\n\nfunction noop() { }\n\n/* global noop */\n/* global on */\n/* global once */\n/* global addClass */\n/* global removeClass */\n/* global append */\n/* global assign */\n/* global trigger */\n/* global serializeForm */\n/* global last */\n/* global css */\n/* global createElement */\n/* global define */\n\nfunction dijalogFactory() {\n    var wrapper;\n    var body = document.body;\n    var spinner;\n    var currentDijalog;\n\n    var dijalog = {\n        dialogs: [],\n\n        overlay: null,\n\n        animationEndEvent: 'animationend webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend',\n\n        baseClassNames: {\n            dijalog: 'dijalog',\n            content: 'dijalog-content',\n            overlay: 'dijalog-overlay',\n            close: 'dijalog-close',\n            closing: 'dijalog-closing',\n            open: 'dijalog-open',\n            hiding: 'dijalog-hiding',\n            hidden: 'dijalog-hidden',\n            visible: 'dijalog-visible'\n        },\n\n        defaultOptions: {\n            content: '',\n            showCloseButton: true,\n            escapeButtonCloses: true,\n            overlayClosesOnClick: true,\n            appendLocation: body,\n            className: 'dijalog-theme-default',\n            css: {},\n            overlayClassName: '',\n            overlayCSS: {},\n            contentClassName: '',\n            contentCSS: {},\n            closeClassName: '',\n            closeCSS: {},\n            beforeClose: noop,\n            afterClose: noop\n        },\n\n        defaultDialogOptions: {\n            callback: noop,\n            afterOpen: noop,\n            message: 'Message',\n            input: '<input name=\"dijalog\" type=\"hidden\" value=\"_dijalog-empty-value\">',\n            value: false,\n            buttons: [\n                {\n                    text: 'OK',\n                    type: 'submit',\n                    className: 'dijalog-button-primary'\n                },\n                {\n                    text: 'Cancel',\n                    type: 'button',\n                    className: 'dijalog-button-secondary',\n                    click: function() {\n                        var dialog = dijalog.findParentDialog(this);\n                        dijalog.close(dialog.id);\n                    }\n                }\n            ],\n            showCloseButton: false,\n            onSubmit: function(event) {\n                var dialog = dijalog.findParentDialog(this);\n                var form = dialog.contentElement.querySelector('form');\n\n                event.preventDefault();\n                event.stopPropagation();\n                dialog.value = dijalog.getFormValueOnSubmit(serializeForm(form));\n\n                dijalog.close(dialog.id);\n            },\n            focusFirstInput: true\n        },\n\n        defaultAlertOptions: {\n            message: 'Alert',\n            buttons: [\n                {\n                    text: 'OK',\n                    type: 'submit',\n                    className: 'dijalog-button-primary'\n                }\n            ]\n        },\n\n        defaultConfirmOptions: {\n            message: 'Confirm'\n        },\n\n        _close: function(dialog) {\n            var content = dialog.contentElement;\n\n            trigger(content, 'dijalogclose', dialog);\n            content.parentNode.removeChild(content);\n\n            if(!dijalog.dialogs.length) {\n                this._hideOverlay();\n            } else {\n                removeClass(wrapper, dijalog.baseClassNames.hiding);\n                dijalog.show();\n            }\n\n            trigger(body, 'dijalogafterclose');\n            dialog.afterClose();\n        },\n\n        close: function(id) {\n            if(!dijalog.dialogs.length) return false;\n\n            var dialog = dijalog.get(id, true);\n\n            if(dialog.beforeClose(dialog) !== false) {\n                once(wrapper, dijalog.animationEndEvent, dijalog._close.bind(this, dialog));\n\n                if(dijalog.dialogs.length) {\n                    addClass(wrapper, dijalog.baseClassNames.hiding);\n                } else {\n                    addClass(wrapper, dijalog.baseClassNames.closing);\n                }\n\n                removeClass(dialog.contentElement, dijalog.baseClassNames.visible);\n\n                if(currentDijalog === dialog) {\n                    currentDijalog = null;\n                }\n            }\n\n            return true;\n        },\n\n        closeAll: function() {\n            while(dijalog.close());\n        },\n\n        get: function(id, remove) {\n            if(remove) {\n                return id ? dijalog.dialogs.splice(id - 1, 1).pop() : dijalog.dialogs.pop();\n            }\n\n            return id ? dijalog.dialogs.slice(id - 1, id).pop() : last(dijalog.dialogs);\n        },\n\n        _hide: function(dialog) {\n            removeClass(wrapper, dijalog.baseClassNames.hiding);\n            addClass(dialog.contentElement, dijalog.baseClassNames.hidden);\n            trigger(wrapper, 'dijaloghidden');\n        },\n\n        hide: function(id) {\n            if(!dijalog.dialogs.length) return false;\n\n            var dialog = dijalog.get(id);\n\n            if(currentDijalog === dialog) {\n                currentDijalog = null;\n            }\n\n            once(wrapper, dijalog.animationEndEvent, dijalog._hide.bind(this, dialog));\n            addClass(wrapper, dijalog.baseClassNames.hiding);\n            removeClass(dialog.contentElement, dijalog.baseClassNames.visible);\n        },\n\n        hideLoading: function() {\n            if(spinner) {\n                spinner.parentNode.removeChild(spinner);\n                spinner = null;\n            }\n\n            if(!dijalog.dialogs.length) {\n                this._hideOverlay();\n            }\n        },\n\n        _showOverlay: function(options) {\n            var overlay;\n\n            if(!wrapper) {\n                wrapper = createElement('div');\n                addClass(wrapper, dijalog.baseClassNames.dijalog);\n                addClass(wrapper, options.className);\n                css(wrapper, options.css);\n\n                overlay = createElement('div');\n                addClass(overlay, dijalog.baseClassNames.overlay);\n                addClass(overlay, options.overlayClassName);\n                css(overlay, options.overlayCSS);\n\n                on(overlay, 'click', function(event) {\n                    if (currentDijalog && currentDijalog.overlayClosesOnClick && event.target === overlay) {\n                        dijalog.close(options.id);\n                    }\n                });\n\n                append(wrapper, overlay);\n                append(options.appendLocation, wrapper);\n            }\n        },\n\n        _hideOverlay: function() {\n            if(wrapper) {\n                wrapper.parentNode.removeChild(wrapper);\n                wrapper = null;\n            }\n        },\n\n        show: function(id) {\n            if(!dijalog.dialogs.length) return false;\n\n            var dialog = dijalog.get(id);\n            removeClass(dialog.contentElement, dijalog.baseClassNames.hidden);\n            addClass(dialog.contentElement, dijalog.baseClassNames.visible);\n\n            currentDijalog = dialog;\n        },\n\n        showLoading: function(withOverlay, options) {\n            if(withOverlay) {\n                options = assign({}, dijalog.defaultOptions, options);\n                this._showOverlay(options);\n            }\n\n            if(!spinner) {\n                spinner = createElement('div');\n                addClass(spinner, 'dijalog-spinner');\n                addClass(spinner, dijalog.defaultOptions.className);\n                append(withOverlay ? wrapper : dijalog.defaultOptions.appendLocation, spinner);\n            }\n        },\n\n        _open: function(options) {\n            var content;\n            var closeButton;\n\n            content = createElement('div');\n            addClass(content, dijalog.baseClassNames.content + ' ' + dijalog.baseClassNames.visible);\n            addClass(content, options.contentClassName);\n            css(content, options.contentCSS);\n            append(content, options.content);\n\n            append(wrapper, content);\n\n            if (options.showCloseButton) {\n                closeButton = createElement('div');\n                addClass(closeButton, dijalog.baseClassNames.close);\n                addClass(closeButton, options.closeClassName);\n                css(closeButton, options.closeCSS);\n\n                on(closeButton, 'click', function() {\n                    dijalog.close(options.id);\n                });\n\n                append(content, closeButton);\n            }\n\n            options.contentElement = content;\n            dijalog.dialogs.push(options);\n            options.id = dijalog.dialogs.length;\n\n            currentDijalog = options;\n\n            if (options.afterOpen) {\n                options.afterOpen(options);\n            }\n\n            setTimeout(function() {\n                trigger(content, 'dijalogopen', options);\n            }, 0);\n        },\n\n        open: function(options) {\n            options = assign({}, dijalog.defaultOptions, options);\n\n            if(!wrapper) {\n                this._showOverlay(options);\n                this._open(options);\n            } else {\n                dijalog.hide();\n                once(wrapper, 'dijaloghidden', dijalog._open.bind(dijalog, options));\n            }\n        },\n\n        setupBodyClassName: function() {\n            on(document, 'dijalogopen', function() {\n                addClass(body, dijalog.baseClassNames.open);\n            });\n\n            on(document, 'dijalogclose', function() {\n                if (!dijalog.dialogs.length) {\n                    removeClass(body, dijalog.baseClassNames.open);\n                }\n            });\n        },\n\n        findParentDialog: function(element) {\n            var filter = function(dialog) {\n                return dialog.contentElement === element;\n            };\n\n            while(element !== body) {\n                if(element.classList.contains(dijalog.baseClassNames.content)) {\n                    return dijalog.dialogs.filter(filter)[0];\n                }\n\n                element = element.parentNode;\n            }\n\n            return null;\n        },\n\n        openDialog: function(options) {\n            var beforeClose = options.beforeClose;\n            var afterOpen = options.afterOpen;\n\n            options = assign({}, dijalog.defaultOptions, dijalog.defaultDialogOptions, options);\n            options.content = dijalog.buildDialogForm(options);\n\n            options.beforeClose = function(dialog) {\n                options.callback(dialog.value);\n\n                if (beforeClose) {\n                    beforeClose(dialog);\n                }\n            };\n\n            if(options.focusFirstInput) {\n                options.afterOpen = function(dialog) {\n                    var firstInput = dialog.contentElement\n                        .querySelector(\n                            'button[type=\"submit\"], ' +\n                            'button[type=\"button\"], ' +\n                            'input[type=\"submit\"], ' +\n                            'input[type=\"button\"], ' +\n                            'textarea, input[type=\"date\"], ' +\n                            'input[type=\"datetime\"], ' +\n                            'input[type=\"datetime-local\"], ' +\n                            'input[type=\"email\"], ' +\n                            'input[type=\"month\"], ' +\n                            'input[type=\"number\"], ' +\n                            'input[type=\"password\"], ' +\n                            'input[type=\"search\"], ' +\n                            'input[type=\"tel\"], ' +\n                            'input[type=\"text\"], ' +\n                            'input[type=\"time\"], ' +\n                            'input[type=\"url\"], ' +\n                            'input[type=\"week\"]'\n                        );\n\n                    if(firstInput) {\n                        firstInput.focus();\n                    }\n\n                    if (afterOpen) {\n                        afterOpen(dialog);\n                    }\n                };\n            }\n\n            dijalog.open(options);\n        },\n\n        alert: function(options) {\n            if(typeof options === 'string') {\n                options = {message: options};\n            }\n\n            options = assign({}, dijalog.defaultAlertOptions, options);\n\n            dijalog.openDialog(options);\n        },\n\n        confirm: function(options) {\n            if(typeof options === 'string') {\n                throw new Error('dijalog.confirm(options) requires options.callback.');\n            }\n\n            options = assign({}, dijalog.defaultConfirmOptions, options);\n\n            dijalog.openDialog(options);\n        },\n\n        prompt: function(options) {\n            if(typeof options === 'string') {\n                throw new Error('dijalog.prompt(options) requires options.callback.');\n            }\n\n            var defaultOptions = {\n                message: '<label for=\"dijalog\">' + (options.label || 'Prompt:') + '</label>',\n                input: '<input ' +\n                'name=\"dijalog\" ' +\n                'type=\"text\" ' +\n                'class=\"dijalog-prompt-input\" ' +\n                'placeholder=\"' + (options.placeholder || '') + '\" ' +\n                'value=\"' + (options.value || '') + '\" />'\n            };\n\n            options = assign({}, defaultOptions, options);\n\n            dijalog.openDialog(options);\n        },\n\n        buildDialogButtons: function(buttons) {\n            var container = createElement('div');\n\n            addClass(container, 'dijalog-buttons');\n\n            buttons.forEach(function(options) {\n                var button = createElement('button');\n\n                button.setAttribute('type', options.type);\n                button.innerHTML = options.text;\n                addClass(button, 'dijalog-button');\n                addClass(button, options.className);\n\n                if(options.click) {\n                    on(button, 'click', function(event) {\n                        options.click.call(this, event, dijalog.findParentDialog(this));\n                    });\n                }\n\n                append(container, button);\n            });\n\n            return container;\n        },\n\n        buildDialogForm: function(options) {\n            var form = createElement('form');\n            addClass(form, 'dijalog-form');\n            on(form, 'submit', options.onSubmit);\n\n            var message = createElement('div');\n            message.innerHTML = options.message;\n            addClass(message, 'dijalog-message');\n            append(form, message);\n\n            if(options.input) {\n                var input = createElement('div');\n                addClass(input, 'dijalog-input');\n                append(input, options.input);\n                append(form, input);\n            }\n\n            if(options.buttons !== null) {\n                append(form, dijalog.buildDialogButtons(options.buttons));\n            }\n\n            return form;\n        },\n\n        getFormValueOnSubmit: function(formData) {\n            if(formData.dijalog) {\n                return formData.dijalog === '_dijalog-empty-value' ? true : formData.dijalog;\n            }\n\n            return formData;\n        }\n    };\n\n    dijalog.helpers = {\n        assign: assign,\n        on: on,\n        once: once,\n        trigger: trigger,\n        serializeForm: serializeForm,\n        css: css,\n        addClass: addClass,\n        removeClass: removeClass,\n        append: append,\n        createElement: createElement,\n        noop: noop,\n        last: last\n    };\n\n    dijalog.setupBodyClassName();\n\n    window.addEventListener('keyup', function(event) {\n        if (currentDijalog && currentDijalog.escapeButtonCloses && event.keyCode === 27) {\n            dijalog.close();\n        }\n    });\n\n    return dijalog;\n}\n\nif(typeof define === 'function' && define.amd) {\n    define(dijalogFactory);\n} else if(typeof exports === 'object') {\n    module.exports = dijalogFactory();\n} else {\n    window.dijalog = dijalogFactory();\n}\n\n})();\n//# sourceMappingURL=dijalog.js.map"],"sourceRoot":"/source/"}